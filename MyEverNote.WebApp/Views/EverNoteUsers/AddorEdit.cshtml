/@model MyEverNote.Entities.EverNoteUser

@{
    ViewBag.Title = "AddorEdit";
}

<script>
    @ViewBag.calljavascriptfunction

    function Popup() {
        BootstrapDialog.show({
            title: "Congratulations",
            message: 'User işleminiz başarıyla gerçekleştirilmiştir.',
            buttons: [{
                label: 'Ok',
                action: function (dialog) {
                    dialog.close();
                }
            }]

        });
    }
</script>

@using (Html.BeginForm("AddorEdit", "EverNoteUsers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-horizontal">
            @if (Model.Id != 0)
            {
                <h2>Update User</h2>
            }
            else
            {
                <h2>Add User</h2>

                <h6>@Html.CheckBox("SendMail", false, new { obj = Model }) Approve sending mail to user</h6>
            }
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="row">
                <div class="col-md-2">
                    @if (Model.ProfileImage != null)
                    {
                        <img src="~/Images/@Model.ProfileImage" class="img-circle" alt="@Model.Username" width="150" height="150">
                    }
                    else
                    {
                        <img src="~/Images/unisex-user-profile-picture.jpg" class="img-circle" width="150" height="150">
                    }
                    <input type="file" name="profileImage" style="margin-top:15px" />
                </div>
                <div class="col-md-5">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="form-check">
                                    @Html.CheckBoxFor(model =>Model.IsActive)
                                    
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-5">
                    

                    <div class="form-group noedit">

                        @Html.LabelFor(model => model.ActivateGuid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ActivateGuid, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ActivateGuid, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group noedit">
                        @Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProfileImage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group noedit">
                        @Html.LabelFor(model => model.CreateOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreateOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreateOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group noedit">
                        @Html.LabelFor(model => model.ModifieOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ModifieOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModifieOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group noedit">
                        @Html.LabelFor(model => model.ModifiedUser, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ModifiedUser, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModifiedUser, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="form-check">
                         
                                    @Html.CheckBoxFor(model => Model.IsAdmin)
                                
                                @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>



            </div>
            <div class="form-group">
                <div class="col-md-2">
                    @Html.ActionLink("Back to User İşlemleri", "UserIslemleri", null, new { @class = "btn btn-danger" })
                </div>
                <div class="col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        $('.noedit :input').attr('disabled', true
        );
    });
</script>


